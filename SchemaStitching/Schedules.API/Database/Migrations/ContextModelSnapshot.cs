// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Schedules.API.Database;

#nullable disable

namespace Schedules.API.Database.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Schedules.API.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("character varying(8000)");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("855b6f71-9458-4de2-8c97-671c61ae1591"),
                            CategoryId = new Guid("0fdc6594-102f-4f05-872b-6746b65bdee9"),
                            CreatedAt = new DateTime(2023, 11, 20, 12, 21, 12, 670, DateTimeKind.Utc).AddTicks(2040),
                            IsDeleted = false,
                            Note = "Sidearm u note",
                            Tenant = "Sidearmu",
                            Title = "The Sidearm Schedule"
                        },
                        new
                        {
                            Id = new Guid("6ece7385-c407-410f-b03e-e961cb76cd56"),
                            CategoryId = new Guid("be4cc0d7-029c-45b6-a121-726a53ccd21a"),
                            CreatedAt = new DateTime(2023, 11, 20, 12, 21, 12, 670, DateTimeKind.Utc).AddTicks(2080),
                            IsDeleted = false,
                            Note = "Oklahoma #1",
                            Tenant = "Oklahoma",
                            Title = "The Oklahoma Schedule #1"
                        },
                        new
                        {
                            Id = new Guid("38ec4717-2743-4e32-99ee-1d30e39ce7ed"),
                            CategoryId = new Guid("402ab577-379f-4e42-86ea-9ecf2e454dd5"),
                            CreatedAt = new DateTime(2023, 11, 20, 12, 21, 12, 670, DateTimeKind.Utc).AddTicks(2090),
                            IsDeleted = false,
                            Note = "Oklahoma #2",
                            Tenant = "Oklahoma",
                            Title = "The Oklahoma Schedule #2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
